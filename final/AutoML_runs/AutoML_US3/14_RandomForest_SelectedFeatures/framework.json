{
    "uid": "89a50554-0862-4cc1-afea-1ea1cfc5943d",
    "name": "14_RandomForest_SelectedFeatures",
    "preprocessing": [
        {
            "ml_task": "binary_classification",
            "drop_features": [
                "concave points_mean",
                "smoothness_mean",
                "concavity_se",
                "area_mean",
                "fractal_dimension_mean",
                "concave points_se",
                "fractal_dimension_se",
                "concavity_worst",
                "texture_se",
                "concavity_mean",
                "perimeter_mean",
                "radius_se",
                "compactness_worst",
                "smoothness_se",
                "compactness_mean",
                "fractal_dimension_worst",
                "radius_mean",
                "perimeter_se",
                "symmetry_mean",
                "area_se"
            ],
            "params": {
                "columns_preprocessing": {},
                "target_preprocessing": [
                    "na_exclude"
                ],
                "ml_task": "binary_classification",
                "drop_features": [
                    "concave points_mean",
                    "smoothness_mean",
                    "concave points_se_diff_concavity_worst",
                    "concavity_se",
                    "area_mean",
                    "fractal_dimension_mean",
                    "concave points_se",
                    "area_worst_ratio_smoothness_worst",
                    "fractal_dimension_se",
                    "concavity_worst",
                    "texture_se",
                    "concavity_mean",
                    "perimeter_mean",
                    "radius_se",
                    "random_feature",
                    "compactness_worst",
                    "smoothness_worst_ratio_area_worst",
                    "smoothness_se",
                    "compactness_mean",
                    "fractal_dimension_worst",
                    "radius_mean",
                    "perimeter_se",
                    "symmetry_mean",
                    "area_se"
                ]
            }
        },
        {
            "ml_task": "binary_classification",
            "drop_features": [
                "concave points_mean",
                "smoothness_mean",
                "concavity_se",
                "area_mean",
                "fractal_dimension_mean",
                "concave points_se",
                "fractal_dimension_se",
                "concavity_worst",
                "texture_se",
                "concavity_mean",
                "perimeter_mean",
                "radius_se",
                "compactness_worst",
                "smoothness_se",
                "compactness_mean",
                "fractal_dimension_worst",
                "radius_mean",
                "perimeter_se",
                "symmetry_mean",
                "area_se"
            ],
            "params": {
                "columns_preprocessing": {},
                "target_preprocessing": [
                    "na_exclude"
                ],
                "ml_task": "binary_classification",
                "drop_features": [
                    "concave points_mean",
                    "smoothness_mean",
                    "concave points_se_diff_concavity_worst",
                    "concavity_se",
                    "area_mean",
                    "fractal_dimension_mean",
                    "concave points_se",
                    "area_worst_ratio_smoothness_worst",
                    "fractal_dimension_se",
                    "concavity_worst",
                    "texture_se",
                    "concavity_mean",
                    "perimeter_mean",
                    "radius_se",
                    "random_feature",
                    "compactness_worst",
                    "smoothness_worst_ratio_area_worst",
                    "smoothness_se",
                    "compactness_mean",
                    "fractal_dimension_worst",
                    "radius_mean",
                    "perimeter_se",
                    "symmetry_mean",
                    "area_se"
                ]
            }
        },
        {
            "ml_task": "binary_classification",
            "drop_features": [
                "concave points_mean",
                "smoothness_mean",
                "concavity_se",
                "area_mean",
                "fractal_dimension_mean",
                "concave points_se",
                "fractal_dimension_se",
                "concavity_worst",
                "texture_se",
                "concavity_mean",
                "perimeter_mean",
                "radius_se",
                "compactness_worst",
                "smoothness_se",
                "compactness_mean",
                "fractal_dimension_worst",
                "radius_mean",
                "perimeter_se",
                "symmetry_mean",
                "area_se"
            ],
            "params": {
                "columns_preprocessing": {},
                "target_preprocessing": [
                    "na_exclude"
                ],
                "ml_task": "binary_classification",
                "drop_features": [
                    "concave points_mean",
                    "smoothness_mean",
                    "concave points_se_diff_concavity_worst",
                    "concavity_se",
                    "area_mean",
                    "fractal_dimension_mean",
                    "concave points_se",
                    "area_worst_ratio_smoothness_worst",
                    "fractal_dimension_se",
                    "concavity_worst",
                    "texture_se",
                    "concavity_mean",
                    "perimeter_mean",
                    "radius_se",
                    "random_feature",
                    "compactness_worst",
                    "smoothness_worst_ratio_area_worst",
                    "smoothness_se",
                    "compactness_mean",
                    "fractal_dimension_worst",
                    "radius_mean",
                    "perimeter_se",
                    "symmetry_mean",
                    "area_se"
                ]
            }
        },
        {
            "ml_task": "binary_classification",
            "drop_features": [
                "concave points_mean",
                "smoothness_mean",
                "concavity_se",
                "area_mean",
                "fractal_dimension_mean",
                "concave points_se",
                "fractal_dimension_se",
                "concavity_worst",
                "texture_se",
                "concavity_mean",
                "perimeter_mean",
                "radius_se",
                "compactness_worst",
                "smoothness_se",
                "compactness_mean",
                "fractal_dimension_worst",
                "radius_mean",
                "perimeter_se",
                "symmetry_mean",
                "area_se"
            ],
            "params": {
                "columns_preprocessing": {},
                "target_preprocessing": [
                    "na_exclude"
                ],
                "ml_task": "binary_classification",
                "drop_features": [
                    "concave points_mean",
                    "smoothness_mean",
                    "concave points_se_diff_concavity_worst",
                    "concavity_se",
                    "area_mean",
                    "fractal_dimension_mean",
                    "concave points_se",
                    "area_worst_ratio_smoothness_worst",
                    "fractal_dimension_se",
                    "concavity_worst",
                    "texture_se",
                    "concavity_mean",
                    "perimeter_mean",
                    "radius_se",
                    "random_feature",
                    "compactness_worst",
                    "smoothness_worst_ratio_area_worst",
                    "smoothness_se",
                    "compactness_mean",
                    "fractal_dimension_worst",
                    "radius_mean",
                    "perimeter_se",
                    "symmetry_mean",
                    "area_se"
                ]
            }
        },
        {
            "ml_task": "binary_classification",
            "drop_features": [
                "concave points_mean",
                "smoothness_mean",
                "concavity_se",
                "area_mean",
                "fractal_dimension_mean",
                "concave points_se",
                "fractal_dimension_se",
                "concavity_worst",
                "texture_se",
                "concavity_mean",
                "perimeter_mean",
                "radius_se",
                "compactness_worst",
                "smoothness_se",
                "compactness_mean",
                "fractal_dimension_worst",
                "radius_mean",
                "perimeter_se",
                "symmetry_mean",
                "area_se"
            ],
            "params": {
                "columns_preprocessing": {},
                "target_preprocessing": [
                    "na_exclude"
                ],
                "ml_task": "binary_classification",
                "drop_features": [
                    "concave points_mean",
                    "smoothness_mean",
                    "concave points_se_diff_concavity_worst",
                    "concavity_se",
                    "area_mean",
                    "fractal_dimension_mean",
                    "concave points_se",
                    "area_worst_ratio_smoothness_worst",
                    "fractal_dimension_se",
                    "concavity_worst",
                    "texture_se",
                    "concavity_mean",
                    "perimeter_mean",
                    "radius_se",
                    "random_feature",
                    "compactness_worst",
                    "smoothness_worst_ratio_area_worst",
                    "smoothness_se",
                    "compactness_mean",
                    "fractal_dimension_worst",
                    "radius_mean",
                    "perimeter_se",
                    "symmetry_mean",
                    "area_se"
                ]
            }
        }
    ],
    "learners": [
        {
            "library_version": "0.24.1",
            "algorithm_name": "Random Forest",
            "algorithm_short_name": "Random Forest",
            "uid": "0333d35f-657e-42d3-b9d1-451fba139acf",
            "params": {
                "model_type": "Random Forest",
                "ml_task": "binary_classification",
                "n_jobs": -1,
                "seed": 1237,
                "criterion": "gini",
                "max_features": 0.8,
                "min_samples_split": 40,
                "max_depth": 3,
                "eval_metric_name": "logloss",
                "explain_level": 2
            },
            "name": "learner_fold_0"
        },
        {
            "library_version": "0.24.1",
            "algorithm_name": "Random Forest",
            "algorithm_short_name": "Random Forest",
            "uid": "ab4d49ca-8d58-4b30-b78c-34e66e537b2c",
            "params": {
                "model_type": "Random Forest",
                "ml_task": "binary_classification",
                "n_jobs": -1,
                "seed": 1237,
                "criterion": "gini",
                "max_features": 0.8,
                "min_samples_split": 40,
                "max_depth": 3,
                "eval_metric_name": "logloss",
                "explain_level": 2
            },
            "name": "learner_fold_1"
        },
        {
            "library_version": "0.24.1",
            "algorithm_name": "Random Forest",
            "algorithm_short_name": "Random Forest",
            "uid": "9237bb0c-2465-48c8-9b8c-5cd8f65654e1",
            "params": {
                "model_type": "Random Forest",
                "ml_task": "binary_classification",
                "n_jobs": -1,
                "seed": 1237,
                "criterion": "gini",
                "max_features": 0.8,
                "min_samples_split": 40,
                "max_depth": 3,
                "eval_metric_name": "logloss",
                "explain_level": 2
            },
            "name": "learner_fold_2"
        },
        {
            "library_version": "0.24.1",
            "algorithm_name": "Random Forest",
            "algorithm_short_name": "Random Forest",
            "uid": "e1f88234-18a5-49bd-8d70-4609b3a0d5a3",
            "params": {
                "model_type": "Random Forest",
                "ml_task": "binary_classification",
                "n_jobs": -1,
                "seed": 1237,
                "criterion": "gini",
                "max_features": 0.8,
                "min_samples_split": 40,
                "max_depth": 3,
                "eval_metric_name": "logloss",
                "explain_level": 2
            },
            "name": "learner_fold_3"
        },
        {
            "library_version": "0.24.1",
            "algorithm_name": "Random Forest",
            "algorithm_short_name": "Random Forest",
            "uid": "d1aac50f-775e-459f-a0e9-f11e16f60e00",
            "params": {
                "model_type": "Random Forest",
                "ml_task": "binary_classification",
                "n_jobs": -1,
                "seed": 1237,
                "criterion": "gini",
                "max_features": 0.8,
                "min_samples_split": 40,
                "max_depth": 3,
                "eval_metric_name": "logloss",
                "explain_level": 2
            },
            "name": "learner_fold_4"
        }
    ],
    "params": {
        "additional": {
            "trees_in_step": 100,
            "train_cant_improve_limit": 1,
            "min_steps": 1,
            "max_steps": 50,
            "early_stopping_rounds": 50,
            "max_rows_limit": null,
            "max_cols_limit": null
        },
        "preprocessing": {
            "columns_preprocessing": {},
            "target_preprocessing": [
                "na_exclude"
            ],
            "ml_task": "binary_classification",
            "drop_features": [
                "concave points_mean",
                "smoothness_mean",
                "concave points_se_diff_concavity_worst",
                "concavity_se",
                "area_mean",
                "fractal_dimension_mean",
                "concave points_se",
                "area_worst_ratio_smoothness_worst",
                "fractal_dimension_se",
                "concavity_worst",
                "texture_se",
                "concavity_mean",
                "perimeter_mean",
                "radius_se",
                "random_feature",
                "compactness_worst",
                "smoothness_worst_ratio_area_worst",
                "smoothness_se",
                "compactness_mean",
                "fractal_dimension_worst",
                "radius_mean",
                "perimeter_se",
                "symmetry_mean",
                "area_se"
            ]
        },
        "validation_strategy": {
            "validation_type": "kfold",
            "k_folds": 5,
            "shuffle": true,
            "stratify": true,
            "random_seed": 1230,
            "X_path": "AutoML_1/X.parquet",
            "y_path": "AutoML_1/y.parquet",
            "results_path": "AutoML_1"
        },
        "learner": {
            "model_type": "Random Forest",
            "ml_task": "binary_classification",
            "n_jobs": -1,
            "seed": 1237,
            "criterion": "gini",
            "max_features": 0.8,
            "min_samples_split": 40,
            "max_depth": 3,
            "eval_metric_name": "logloss",
            "explain_level": 2
        },
        "automl_random_state": 1234,
        "ml_task": "binary_classification",
        "explain_level": 2,
        "name": "14_RandomForest_SelectedFeatures",
        "status": "initialized",
        "final_loss": null,
        "train_time": null,
        "data_type": "original_features_selection",
        "max_time_for_learner": 200.0
    },
    "saved": [
        "14_RandomForest_SelectedFeatures/learner_fold_0.random_forest",
        "14_RandomForest_SelectedFeatures/learner_fold_1.random_forest",
        "14_RandomForest_SelectedFeatures/learner_fold_2.random_forest",
        "14_RandomForest_SelectedFeatures/learner_fold_3.random_forest",
        "14_RandomForest_SelectedFeatures/learner_fold_4.random_forest"
    ],
    "predictions_fname": "14_RandomForest_SelectedFeatures/predictions_out_of_folds.csv",
    "metric_name": "logloss",
    "final_loss": 0.14979696767891057,
    "train_time": 36.5145902633667,
    "is_stacked": false,
    "threshold": 0.43279953791344467
}