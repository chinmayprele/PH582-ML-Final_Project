{
    "uid": "28f76006-d803-4b14-9b96-fd5b63cc4d22",
    "name": "9_Xgboost_GoldenFeatures",
    "preprocessing": [
        {
            "golden_features": {
                "new_features": [
                    {
                        "feature1": "smoothness_mean",
                        "feature2": "concave points_mean",
                        "operation": "ratio",
                        "score": 0.3009433869
                    },
                    {
                        "feature1": "concave points_mean",
                        "feature2": "concave points_se",
                        "operation": "diff",
                        "score": 0.3949065766
                    },
                    {
                        "feature1": "texture_worst",
                        "feature2": "concave points_mean",
                        "operation": "multiply",
                        "score": 0.4499526206
                    },
                    {
                        "feature1": "fractal_dimension_worst",
                        "feature2": "area_mean",
                        "operation": "multiply",
                        "score": 0.5162554987
                    },
                    {
                        "feature1": "symmetry_mean",
                        "feature2": "concave points_mean",
                        "operation": "ratio",
                        "score": 0.5334041624
                    },
                    {
                        "feature1": "radius_se",
                        "feature2": "fractal_dimension_worst",
                        "operation": "diff",
                        "score": 0.5350818982
                    },
                    {
                        "feature1": "compactness_worst",
                        "feature2": "symmetry_se",
                        "operation": "ratio",
                        "score": 0.537270496
                    },
                    {
                        "feature1": "symmetry_se",
                        "feature2": "compactness_worst",
                        "operation": "ratio",
                        "score": 0.537270496
                    },
                    {
                        "feature1": "compactness_se",
                        "feature2": "concavity_mean",
                        "operation": "ratio",
                        "score": 0.5391179872
                    },
                    {
                        "feature1": "smoothness_se",
                        "feature2": "concave points_mean",
                        "operation": "ratio",
                        "score": 0.5494994231
                    }
                ],
                "new_columns": [
                    "smoothness_mean_ratio_concave points_mean",
                    "concave points_mean_diff_concave points_se",
                    "texture_worst_multiply_concave points_mean",
                    "fractal_dimension_worst_multiply_area_mean",
                    "symmetry_mean_ratio_concave points_mean",
                    "radius_se_diff_fractal_dimension_worst",
                    "compactness_worst_ratio_symmetry_se",
                    "symmetry_se_ratio_compactness_worst",
                    "compactness_se_ratio_concavity_mean",
                    "smoothness_se_ratio_concave points_mean"
                ],
                "ml_task": "binary_classification"
            },
            "ml_task": "binary_classification",
            "params": {
                "columns_preprocessing": {},
                "target_preprocessing": [
                    "na_exclude"
                ],
                "ml_task": "binary_classification",
                "golden_features": {
                    "results_path": "AutoML_1",
                    "ml_task": "binary_classification"
                }
            }
        },
        {
            "golden_features": {
                "new_features": [
                    {
                        "feature1": "smoothness_mean",
                        "feature2": "concave points_mean",
                        "operation": "ratio",
                        "score": 0.3009433869
                    },
                    {
                        "feature1": "concave points_mean",
                        "feature2": "concave points_se",
                        "operation": "diff",
                        "score": 0.3949065766
                    },
                    {
                        "feature1": "texture_worst",
                        "feature2": "concave points_mean",
                        "operation": "multiply",
                        "score": 0.4499526206
                    },
                    {
                        "feature1": "fractal_dimension_worst",
                        "feature2": "area_mean",
                        "operation": "multiply",
                        "score": 0.5162554987
                    },
                    {
                        "feature1": "symmetry_mean",
                        "feature2": "concave points_mean",
                        "operation": "ratio",
                        "score": 0.5334041624
                    },
                    {
                        "feature1": "radius_se",
                        "feature2": "fractal_dimension_worst",
                        "operation": "diff",
                        "score": 0.5350818982
                    },
                    {
                        "feature1": "compactness_worst",
                        "feature2": "symmetry_se",
                        "operation": "ratio",
                        "score": 0.537270496
                    },
                    {
                        "feature1": "symmetry_se",
                        "feature2": "compactness_worst",
                        "operation": "ratio",
                        "score": 0.537270496
                    },
                    {
                        "feature1": "compactness_se",
                        "feature2": "concavity_mean",
                        "operation": "ratio",
                        "score": 0.5391179872
                    },
                    {
                        "feature1": "smoothness_se",
                        "feature2": "concave points_mean",
                        "operation": "ratio",
                        "score": 0.5494994231
                    }
                ],
                "new_columns": [
                    "smoothness_mean_ratio_concave points_mean",
                    "concave points_mean_diff_concave points_se",
                    "texture_worst_multiply_concave points_mean",
                    "fractal_dimension_worst_multiply_area_mean",
                    "symmetry_mean_ratio_concave points_mean",
                    "radius_se_diff_fractal_dimension_worst",
                    "compactness_worst_ratio_symmetry_se",
                    "symmetry_se_ratio_compactness_worst",
                    "compactness_se_ratio_concavity_mean",
                    "smoothness_se_ratio_concave points_mean"
                ],
                "ml_task": "binary_classification"
            },
            "ml_task": "binary_classification",
            "params": {
                "columns_preprocessing": {},
                "target_preprocessing": [
                    "na_exclude"
                ],
                "ml_task": "binary_classification",
                "golden_features": {
                    "results_path": "AutoML_1",
                    "ml_task": "binary_classification"
                }
            }
        },
        {
            "golden_features": {
                "new_features": [
                    {
                        "feature1": "smoothness_mean",
                        "feature2": "concave points_mean",
                        "operation": "ratio",
                        "score": 0.3009433869
                    },
                    {
                        "feature1": "concave points_mean",
                        "feature2": "concave points_se",
                        "operation": "diff",
                        "score": 0.3949065766
                    },
                    {
                        "feature1": "texture_worst",
                        "feature2": "concave points_mean",
                        "operation": "multiply",
                        "score": 0.4499526206
                    },
                    {
                        "feature1": "fractal_dimension_worst",
                        "feature2": "area_mean",
                        "operation": "multiply",
                        "score": 0.5162554987
                    },
                    {
                        "feature1": "symmetry_mean",
                        "feature2": "concave points_mean",
                        "operation": "ratio",
                        "score": 0.5334041624
                    },
                    {
                        "feature1": "radius_se",
                        "feature2": "fractal_dimension_worst",
                        "operation": "diff",
                        "score": 0.5350818982
                    },
                    {
                        "feature1": "compactness_worst",
                        "feature2": "symmetry_se",
                        "operation": "ratio",
                        "score": 0.537270496
                    },
                    {
                        "feature1": "symmetry_se",
                        "feature2": "compactness_worst",
                        "operation": "ratio",
                        "score": 0.537270496
                    },
                    {
                        "feature1": "compactness_se",
                        "feature2": "concavity_mean",
                        "operation": "ratio",
                        "score": 0.5391179872
                    },
                    {
                        "feature1": "smoothness_se",
                        "feature2": "concave points_mean",
                        "operation": "ratio",
                        "score": 0.5494994231
                    }
                ],
                "new_columns": [
                    "smoothness_mean_ratio_concave points_mean",
                    "concave points_mean_diff_concave points_se",
                    "texture_worst_multiply_concave points_mean",
                    "fractal_dimension_worst_multiply_area_mean",
                    "symmetry_mean_ratio_concave points_mean",
                    "radius_se_diff_fractal_dimension_worst",
                    "compactness_worst_ratio_symmetry_se",
                    "symmetry_se_ratio_compactness_worst",
                    "compactness_se_ratio_concavity_mean",
                    "smoothness_se_ratio_concave points_mean"
                ],
                "ml_task": "binary_classification"
            },
            "ml_task": "binary_classification",
            "params": {
                "columns_preprocessing": {},
                "target_preprocessing": [
                    "na_exclude"
                ],
                "ml_task": "binary_classification",
                "golden_features": {
                    "results_path": "AutoML_1",
                    "ml_task": "binary_classification"
                }
            }
        },
        {
            "golden_features": {
                "new_features": [
                    {
                        "feature1": "smoothness_mean",
                        "feature2": "concave points_mean",
                        "operation": "ratio",
                        "score": 0.3009433869
                    },
                    {
                        "feature1": "concave points_mean",
                        "feature2": "concave points_se",
                        "operation": "diff",
                        "score": 0.3949065766
                    },
                    {
                        "feature1": "texture_worst",
                        "feature2": "concave points_mean",
                        "operation": "multiply",
                        "score": 0.4499526206
                    },
                    {
                        "feature1": "fractal_dimension_worst",
                        "feature2": "area_mean",
                        "operation": "multiply",
                        "score": 0.5162554987
                    },
                    {
                        "feature1": "symmetry_mean",
                        "feature2": "concave points_mean",
                        "operation": "ratio",
                        "score": 0.5334041624
                    },
                    {
                        "feature1": "radius_se",
                        "feature2": "fractal_dimension_worst",
                        "operation": "diff",
                        "score": 0.5350818982
                    },
                    {
                        "feature1": "compactness_worst",
                        "feature2": "symmetry_se",
                        "operation": "ratio",
                        "score": 0.537270496
                    },
                    {
                        "feature1": "symmetry_se",
                        "feature2": "compactness_worst",
                        "operation": "ratio",
                        "score": 0.537270496
                    },
                    {
                        "feature1": "compactness_se",
                        "feature2": "concavity_mean",
                        "operation": "ratio",
                        "score": 0.5391179872
                    },
                    {
                        "feature1": "smoothness_se",
                        "feature2": "concave points_mean",
                        "operation": "ratio",
                        "score": 0.5494994231
                    }
                ],
                "new_columns": [
                    "smoothness_mean_ratio_concave points_mean",
                    "concave points_mean_diff_concave points_se",
                    "texture_worst_multiply_concave points_mean",
                    "fractal_dimension_worst_multiply_area_mean",
                    "symmetry_mean_ratio_concave points_mean",
                    "radius_se_diff_fractal_dimension_worst",
                    "compactness_worst_ratio_symmetry_se",
                    "symmetry_se_ratio_compactness_worst",
                    "compactness_se_ratio_concavity_mean",
                    "smoothness_se_ratio_concave points_mean"
                ],
                "ml_task": "binary_classification"
            },
            "ml_task": "binary_classification",
            "params": {
                "columns_preprocessing": {},
                "target_preprocessing": [
                    "na_exclude"
                ],
                "ml_task": "binary_classification",
                "golden_features": {
                    "results_path": "AutoML_1",
                    "ml_task": "binary_classification"
                }
            }
        },
        {
            "golden_features": {
                "new_features": [
                    {
                        "feature1": "smoothness_mean",
                        "feature2": "concave points_mean",
                        "operation": "ratio",
                        "score": 0.3009433869
                    },
                    {
                        "feature1": "concave points_mean",
                        "feature2": "concave points_se",
                        "operation": "diff",
                        "score": 0.3949065766
                    },
                    {
                        "feature1": "texture_worst",
                        "feature2": "concave points_mean",
                        "operation": "multiply",
                        "score": 0.4499526206
                    },
                    {
                        "feature1": "fractal_dimension_worst",
                        "feature2": "area_mean",
                        "operation": "multiply",
                        "score": 0.5162554987
                    },
                    {
                        "feature1": "symmetry_mean",
                        "feature2": "concave points_mean",
                        "operation": "ratio",
                        "score": 0.5334041624
                    },
                    {
                        "feature1": "radius_se",
                        "feature2": "fractal_dimension_worst",
                        "operation": "diff",
                        "score": 0.5350818982
                    },
                    {
                        "feature1": "compactness_worst",
                        "feature2": "symmetry_se",
                        "operation": "ratio",
                        "score": 0.537270496
                    },
                    {
                        "feature1": "symmetry_se",
                        "feature2": "compactness_worst",
                        "operation": "ratio",
                        "score": 0.537270496
                    },
                    {
                        "feature1": "compactness_se",
                        "feature2": "concavity_mean",
                        "operation": "ratio",
                        "score": 0.5391179872
                    },
                    {
                        "feature1": "smoothness_se",
                        "feature2": "concave points_mean",
                        "operation": "ratio",
                        "score": 0.5494994231
                    }
                ],
                "new_columns": [
                    "smoothness_mean_ratio_concave points_mean",
                    "concave points_mean_diff_concave points_se",
                    "texture_worst_multiply_concave points_mean",
                    "fractal_dimension_worst_multiply_area_mean",
                    "symmetry_mean_ratio_concave points_mean",
                    "radius_se_diff_fractal_dimension_worst",
                    "compactness_worst_ratio_symmetry_se",
                    "symmetry_se_ratio_compactness_worst",
                    "compactness_se_ratio_concavity_mean",
                    "smoothness_se_ratio_concave points_mean"
                ],
                "ml_task": "binary_classification"
            },
            "ml_task": "binary_classification",
            "params": {
                "columns_preprocessing": {},
                "target_preprocessing": [
                    "na_exclude"
                ],
                "ml_task": "binary_classification",
                "golden_features": {
                    "results_path": "AutoML_1",
                    "ml_task": "binary_classification"
                }
            }
        }
    ],
    "learners": [
        {
            "library_version": "1.3.3",
            "algorithm_name": "Extreme Gradient Boosting",
            "algorithm_short_name": "Xgboost",
            "uid": "b4fa61e1-b24d-44ff-bceb-2606b41b980f",
            "params": {
                "model_type": "Xgboost",
                "ml_task": "binary_classification",
                "n_jobs": -1,
                "seed": 1236,
                "objective": "binary:logistic",
                "eta": 0.1,
                "max_depth": 8,
                "min_child_weight": 1,
                "subsample": 1.0,
                "colsample_bytree": 1.0,
                "eval_metric": "logloss",
                "explain_level": 2
            },
            "name": "learner_fold_0",
            "best_ntree_limit": 83
        },
        {
            "library_version": "1.3.3",
            "algorithm_name": "Extreme Gradient Boosting",
            "algorithm_short_name": "Xgboost",
            "uid": "f9634a28-69a2-4cd5-a0a5-d6c75ac4360d",
            "params": {
                "model_type": "Xgboost",
                "ml_task": "binary_classification",
                "n_jobs": -1,
                "seed": 1236,
                "objective": "binary:logistic",
                "eta": 0.1,
                "max_depth": 8,
                "min_child_weight": 1,
                "subsample": 1.0,
                "colsample_bytree": 1.0,
                "eval_metric": "logloss",
                "explain_level": 2
            },
            "name": "learner_fold_1",
            "best_ntree_limit": 72
        },
        {
            "library_version": "1.3.3",
            "algorithm_name": "Extreme Gradient Boosting",
            "algorithm_short_name": "Xgboost",
            "uid": "c6636bf6-4c5d-4fb8-8f1a-2b8d9bd0e6d6",
            "params": {
                "model_type": "Xgboost",
                "ml_task": "binary_classification",
                "n_jobs": -1,
                "seed": 1236,
                "objective": "binary:logistic",
                "eta": 0.1,
                "max_depth": 8,
                "min_child_weight": 1,
                "subsample": 1.0,
                "colsample_bytree": 1.0,
                "eval_metric": "logloss",
                "explain_level": 2
            },
            "name": "learner_fold_2",
            "best_ntree_limit": 295
        },
        {
            "library_version": "1.3.3",
            "algorithm_name": "Extreme Gradient Boosting",
            "algorithm_short_name": "Xgboost",
            "uid": "60824974-087e-4956-9a15-8db251fdb009",
            "params": {
                "model_type": "Xgboost",
                "ml_task": "binary_classification",
                "n_jobs": -1,
                "seed": 1236,
                "objective": "binary:logistic",
                "eta": 0.1,
                "max_depth": 8,
                "min_child_weight": 1,
                "subsample": 1.0,
                "colsample_bytree": 1.0,
                "eval_metric": "logloss",
                "explain_level": 2
            },
            "name": "learner_fold_3",
            "best_ntree_limit": 126
        },
        {
            "library_version": "1.3.3",
            "algorithm_name": "Extreme Gradient Boosting",
            "algorithm_short_name": "Xgboost",
            "uid": "a5cc6b5c-3833-4481-8178-74a9cd69a2f0",
            "params": {
                "model_type": "Xgboost",
                "ml_task": "binary_classification",
                "n_jobs": -1,
                "seed": 1236,
                "objective": "binary:logistic",
                "eta": 0.1,
                "max_depth": 8,
                "min_child_weight": 1,
                "subsample": 1.0,
                "colsample_bytree": 1.0,
                "eval_metric": "logloss",
                "explain_level": 2
            },
            "name": "learner_fold_4",
            "best_ntree_limit": 32
        }
    ],
    "params": {
        "additional": {
            "max_rounds": 10000,
            "early_stopping_rounds": 50,
            "max_rows_limit": null,
            "max_cols_limit": null
        },
        "preprocessing": {
            "columns_preprocessing": {},
            "target_preprocessing": [
                "na_exclude"
            ],
            "ml_task": "binary_classification",
            "golden_features": {
                "results_path": "AutoML_1",
                "ml_task": "binary_classification"
            }
        },
        "validation_strategy": {
            "validation_type": "kfold",
            "k_folds": 5,
            "shuffle": true,
            "stratify": true,
            "random_seed": 1230,
            "X_path": "AutoML_1/X.parquet",
            "y_path": "AutoML_1/y.parquet",
            "results_path": "AutoML_1"
        },
        "learner": {
            "model_type": "Xgboost",
            "ml_task": "binary_classification",
            "n_jobs": -1,
            "seed": 1236,
            "objective": "binary:logistic",
            "eta": 0.1,
            "max_depth": 8,
            "min_child_weight": 1,
            "subsample": 1.0,
            "colsample_bytree": 1.0,
            "eval_metric": "logloss",
            "explain_level": 2
        },
        "automl_random_state": 1234,
        "ml_task": "binary_classification",
        "explain_level": 2,
        "name": "9_Xgboost_GoldenFeatures",
        "status": "initialized",
        "final_loss": null,
        "train_time": null,
        "data_type": "original_golden_features",
        "max_time_for_learner": 200.0
    },
    "saved": [
        "9_Xgboost_GoldenFeatures/learner_fold_0.xgboost",
        "9_Xgboost_GoldenFeatures/learner_fold_1.xgboost",
        "9_Xgboost_GoldenFeatures/learner_fold_2.xgboost",
        "9_Xgboost_GoldenFeatures/learner_fold_3.xgboost",
        "9_Xgboost_GoldenFeatures/learner_fold_4.xgboost"
    ],
    "predictions_fname": "9_Xgboost_GoldenFeatures/predictions_out_of_folds.csv",
    "metric_name": "logloss",
    "final_loss": 0.11135949268169017,
    "train_time": 46.60725522041321,
    "is_stacked": false,
    "threshold": 0.44169893860816956
}